package kk.practice.javaStackQueue;import java.util.ArrayList;/** * @author kangkai on 2018/11/7. */public class TestMQ {    public static void main(String[] args) {        MyMQ myMQ = MyMQ.getInstance();        myMQ.push("aaa");        myMQ.push("bbb");        myMQ.push("ccc");        myMQ.push("aaa");        myMQ.push("bbb");        System.out.println(myMQ.pop());//        System.out.println(getMq());//        addMq("aaa");//        addMq("bbb");//        addMq("ccc");//        addMq("aaa");//        addMq("bbb");//        System.out.println(getMq());//        System.out.println("the arrayList: " + conncetMq);//        requeueMq("aaa");//        System.out.println("the arrayList: " + conncetMq);//        //index最大的一个是最后添加的//        removeMq("bbb");//        System.out.println("the arrayList: " + conncetMq);////        removeMq("bbb");//        System.out.println("the arrayList: " + conncetMq);    }    static class MyMQ{        private ArrayList<String> mq = new ArrayList<>();        private static MyMQ myMQ;        public static MyMQ getInstance() {            if (null == myMQ) {                myMQ = new MyMQ();            }            return myMQ;        }        //获取第一个队列元素        public String pop() {            if (mq.size() > 0) {                return mq.get(0);            }            return "";        }        //清除元素        public void clearMQ() {            mq.clear();        }        //重新排队        public boolean requeueMQ(String address) {            boolean result = false;            for (String s : mq) {                if (s.equals(address)) {                    result = mq.remove(address) && mq.add(address);                    break;// 停止                }            }            return result;        }        //删除队列元素        public boolean removeMQ(String address) {            boolean result = false;            for (String s : mq) {                if (s.equals(address)) {                    result = mq.remove(address);                    break;// 停止                }            }            return result;        }        //添加队列元素 不能重复        public boolean push(String address) {            boolean result = true;            for (String s : mq) {                if (s.equals(address)) {                    result = false;                    break;// 停止                }            }            if (result) {                result = mq.add(address);            }            return result;        }    }}