package kk.practice.多线程.synchronizedTest;/** * 多个线程访问synchronized和非synchronized代码块 * @author kangkai on 2018/11/23. */public class SynchronizedDemo02 implements Runnable {    private int count;    public SynchronizedDemo02() {        count = 0;    }    @Override    public void run() {        addCount();        printCount();    }    private void addCount() {        synchronized (this) {            String threadName = Thread.currentThread().getName();            for (int i = 0; i < 4; i++) {                System.out.println(threadName + " addCount: " + count++);                try {                    Thread.sleep(100);                } catch (InterruptedException e) {                    e.printStackTrace();                }            }            System.out.println(threadName + " addCount结束: " + count);        }    }    private void printCount() {        String threadName = Thread.currentThread().getName();        for (int i = 0; i < 4; i++) {            System.out.println(threadName + " printCount: " + count);            try {                Thread.sleep(100);            } catch (InterruptedException e) {                e.printStackTrace();            }        }        System.out.println(threadName + " printCount结束");    }    public static void main(String[] args) {        SynchronizedDemo02 demo02 = new SynchronizedDemo02();        Thread thread01 = new Thread(demo02,"A"); //demo02对象的 A 线程        Thread thread02 = new Thread(demo02,"B"); //demo02对象的 B 线程        thread01.start();        thread02.start();    }}