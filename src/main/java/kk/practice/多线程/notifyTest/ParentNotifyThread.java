package kk.practice.多线程.notifyTest;/** * 这个线程用来发出notify请求 * @author kangkai on 2018/11/21. */public class ParentNotifyThread implements Runnable{    static final Object WAIT_CHILEOBJECT = new Object();    public static void main(String[] args) {        new Thread(new ParentNotifyThread()).start();    }    @Override    public void run() {        int maxIndex = 3;        for(int index = 0 ; index < maxIndex ; index++) {            ChildNotifyThread childNotify = new ChildNotifyThread();            Thread childNotifyThread = new Thread(childNotify);            childNotifyThread.start();        }        System.out.println("childNotifyThread.start 已经执行");        synchronized (ParentNotifyThread.WAIT_CHILEOBJECT) {            ParentNotifyThread.WAIT_CHILEOBJECT.notify();        }        // 没有具体的演示含义；        // 只是为了保证ParentNotifyThread不会退出        synchronized (ParentNotifyThread.class) {            try {                ParentNotifyThread.class.wait();            } catch (InterruptedException e) {                e.printStackTrace();            }        }    }}