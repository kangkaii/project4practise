package kk.practice.java8函数式接口使用;import java.util.function.Consumer;import java.util.function.Predicate;/** * @author kangkai on 2018/6/25. */public class PredicateConsumerDemo {    public static Student updateStudentFee(Student student, Predicate<Student> predicate, Consumer<Student> consumer) {        //Use the predicate to decide when to update the discount.        if (predicate.test(student)) {            //Use the consumer to update the discount value.            consumer.accept(student);        }        return student;    }    public static void main(String[] args) {        Student student1 = new Student("Ashok","Kumar", 9.5);        student1 = updateStudentFee(student1,                //Lambda expression for Predicate interface                new Predicate<Student>() {                    @Override                    public boolean test(Student student) {                        return false;                    }                },                //Lambda expression for Consumer inerface                student -> student.feeDiscount = 30.0);        student1.printFee();    }}class Student{    String firstName;    String lastName;    Double grade;    Double feeDiscount = 0.0;    Double baseFee = 20000.0;    public Student(String firstName, String lastName, Double grade) {        this.firstName = firstName;        this.lastName = lastName;        this.grade = grade;    }    public void printFee(){        Double newFee = baseFee - ((baseFee * feeDiscount) / 100);        System.out.println("The fee after discount: " + newFee);    }}